{"name":"Call","tagline":"sipml5/call.htm","body":"<!DOCTYPE html>\r\n<!--\r\n* Copyright (C) 2012 Doubango Telecom <http://www.doubango.org>\r\n* License: BSD\r\n* This file is part of Open Source sipML5 solution <http://www.sipml5.org>\r\n-->\r\n<html>\r\n<!-- head -->\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title>sipML5 live demo</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <meta name=\"Keywords\" content=\"doubango, sipML5, VoIP, HTML5, WebRTC, RTCWeb, SIP, IMS, Video chat, VP8, live demo \" />\r\n    <meta name=\"Description\" content=\"HTML5 SIP client using WebRTC framework\" />\r\n    <meta name=\"author\" content=\"Doubango Telecom\" />\r\n\r\n    <!-- SIPML5 API:\r\n    DEBUG VERSION: 'SIPml-api.js'\r\n    RELEASE VERSION: 'release/SIPml-api.js'\r\n    -->\r\n    <script src=\"SIPml-api.js?svn=224\" type=\"text/javascript\"> </script>\r\n\r\n    <!-- Styles -->\r\n    <link href=\"./assets/css/bootstrap.css\" rel=\"stylesheet\" />\r\n    <style type=\"text/css\">\r\n        body{\r\n            padding-top: 80px;\r\n            padding-bottom: 40px;\r\n        }\r\n        .navbar-inner-red {\r\n          background-color: #600000;\r\n          background-image: none;\r\n          background-repeat: no-repeat;\r\n          filter: none;\r\n        }\r\n        .full-screen{\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            overflow: hidden;\r\n        }\r\n        .normal-screen{\r\n            position: relative;\r\n        }\r\n        .call-options {\r\n          padding: 5px;\r\n          background-color: #f0f0f0;\r\n          border: 1px solid #eee;\r\n          border: 1px solid rgba(0, 0, 0, 0.08);\r\n          -webkit-border-radius: 4px;\r\n          -moz-border-radius: 4px;\r\n          border-radius: 4px;\r\n          -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\r\n          -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\r\n          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\r\n          -webkit-transition-property: opacity;\r\n          -moz-transition-property: opacity; \r\n          -o-transition-property: opacity; \r\n          -webkit-transition-duration: 2s;\r\n          -moz-transition-duration: 2s;\r\n          -o-transition-duration: 2s;\r\n        }\r\n        .tab-video,\r\n        .div-video{\r\n            width: 100%; \r\n            height: 0px; \r\n            -webkit-transition-property: height;\r\n            -moz-transition-property: height;\r\n            -o-transition-property: height;\r\n            -webkit-transition-duration: 2s;\r\n            -moz-transition-duration: 2s;\r\n            -o-transition-duration: 2s;\r\n        }\r\n        .label-align {\r\n            display: block;\r\n            padding-left: 15px;\r\n            text-indent: -15px;\r\n        }\r\n        .input-align {\r\n            width: 13px;\r\n            height: 13px;\r\n            padding: 0;\r\n            margin:0;\r\n            vertical-align: bottom;\r\n            position: relative;\r\n            top: -1px;\r\n            *overflow: hidden;\r\n        }\r\n        .glass-panel{\r\n            z-index: 99;\r\n            position: fixed;\r\n            width: 100%;\r\n            height: 100%;\r\n            margin: 0;\r\n            padding: 0;\r\n            top: 0;\r\n            left: 0;\r\n            opacity: 0.8;\r\n            background-color: Gray;\r\n        }\r\n        .div-keypad {\r\n            z-index: 100;\r\n            position: fixed;\r\n            -moz-transition-property: left top;\r\n            -o-transition-property: left top;\r\n            -webkit-transition-duration: 2s;\r\n            -moz-transition-duration: 2s;\r\n            -o-transition-duration: 2s;\r\n        }\r\n        \r\n    </style>\r\n    <link href=\"./assets/css/bootstrap-responsive.css\" rel=\"stylesheet\" />\r\n    <!-- Le fav and touch icons -->\r\n    <link rel=\"shortcut icon\" href=\"./assets/ico/favicon.ico\" />\r\n    <link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"./assets/ico/apple-touch-icon-114-precomposed.png\" />\r\n    <link rel=\"apple-touch-icon-precomposed\" sizes=\"72x72\" href=\"./assets/ico/apple-touch-icon-72-precomposed.png\" />\r\n    <link rel=\"apple-touch-icon-precomposed\" href=\"./assets/ico/apple-touch-icon-57-precomposed.png\" />\r\n</head>\r\n<!-- Javascript code -->\r\n<script type=\"text/javascript\">\r\n\r\n    // to avoid caching\r\n    //if (window.location.href.indexOf(\"svn=\") == -1) {\r\n    //    window.location.href += (window.location.href.indexOf(\"?\") == -1 ? \"?svn=224\" : \"&svn=224\");\r\n    //}\r\n\r\n    var sTransferNumber;\r\n    var oRingTone, oRingbackTone;\r\n    var oSipStack, oSipSessionRegister, oSipSessionCall, oSipSessionTransferCall;\r\n    var videoRemote, videoLocal, audioRemote;\r\n    var bFullScreen = false;\r\n    var oNotifICall;\r\n    var bDisableVideo = false;\r\n    var viewVideoLocal, viewVideoRemote; // <video> (webrtc) or <div> (webrtc4all)\r\n    var oConfigCall;\r\n    var oReadyStateTimer;\r\n\r\n    C = \r\n    {\r\n        divKeyPadWidth: 220\r\n    };\r\n\r\n    window.onload = function () {\r\n        if(window.console) {\r\n            window.console.info(\"location=\" + window.location);\r\n        }\r\n        videoLocal = document.getElementById(\"video_local\");\r\n        videoRemote = document.getElementById(\"video_remote\");\r\n        audioRemote = document.getElementById(\"audio_remote\");\r\n\r\n        document.onkeyup = onKeyUp;\r\n        document.body.onkeyup = onKeyUp;\r\n        divCallCtrl.onmousemove = onDivCallCtrlMouseMove;\r\n\r\n        // set debug level\r\n        SIPml.setDebugLevel((window.localStorage && window.localStorage.getItem('org.doubango.expert.disable_debug') == \"true\") ? \"error\" : \"info\");\r\n\r\n        loadCredentials();\r\n        loadCallOptions();\r\n\r\n        // Initialize call button\r\n        uiBtnCallSetText(\"Call\");\r\n\r\n        var getPVal = function (PName) {\r\n            var query = window.location.search.substring(1);\r\n            var vars = query.split('&');\r\n            for (var i = 0; i < vars.length; i++) {\r\n                var pair = vars[i].split('=');\r\n                if (decodeURIComponent(pair[0]) === PName) {\r\n                    return decodeURIComponent(pair[1]);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        var preInit = function() {\r\n            // set default webrtc type (before initialization)\r\n            var s_webrtc_type = getPVal(\"wt\");\r\n            if (s_webrtc_type) {\r\n                if(window.console) {\r\n                    window.console.info(\"s_webrtc_type=\" + s_webrtc_type);\r\n                }\r\n                SIPml.setWebRtcType(s_webrtc_type);\r\n            }\r\n\r\n            // initialize SIPML5\r\n            SIPml.init(postInit);\r\n        }\r\n\r\n        oReadyStateTimer = setInterval(function () {\r\n            if (document.readyState === \"complete\") {\r\n                clearInterval(oReadyStateTimer);\r\n                // initialize SIPML5\r\n                preInit();\r\n            }\r\n        },\r\n        500);\r\n\r\n        /*if (document.readyState === \"complete\") {\r\n            preInit();\r\n        }\r\n        else {\r\n            document.onreadystatechange = function () {\r\n                 if (document.readyState === \"complete\") {\r\n                    preInit();\r\n                }\r\n            }\r\n       }*/\r\n    };\r\n\r\n    function postInit() {\r\n        // check webrtc4all version\r\n        if (SIPml.isWebRtc4AllSupported() && SIPml.isWebRtc4AllPluginOutdated()) {            \r\n            if (confirm(\"Your WebRtc4all extension is outdated (\"+SIPml.getWebRtc4AllVersion()+\"). A new version with critical bug fix is available. Do you want to install it?\\nIMPORTANT: You must restart your browser after the installation.\")) {\r\n                window.location = 'http://code.google.com/p/webrtc4all/downloads/list';\r\n                return;\r\n            }\r\n        }\r\n\r\n        // check for WebRTC support\r\n        if (!SIPml.isWebRtcSupported()) {\r\n            // is it chrome?\r\n            if (SIPml.getNavigatorFriendlyName() == 'chrome') {\r\n                    if (confirm(\"You're using an old Chrome version or WebRTC is not enabled.\\nDo you want to see how to enable WebRTC?\")) {\r\n                        window.location = 'http://www.webrtc.org/running-the-demos';\r\n                    }\r\n                    else {\r\n                        window.location = \"index.html\";\r\n                    }\r\n                    return;\r\n            }\r\n                \r\n            // for now the plugins (WebRTC4all only works on Windows)\r\n            if (SIPml.getSystemFriendlyName() == 'windows') {\r\n                // Internet explorer\r\n                if (SIPml.getNavigatorFriendlyName() == 'ie') {\r\n                    // Check for IE version \r\n                    if (parseFloat(SIPml.getNavigatorVersion()) < 9.0) {\r\n                        if (confirm(\"You are using an old IE version. You need at least version 9. Would you like to update IE?\")) {\r\n                            window.location = 'http://windows.microsoft.com/en-us/internet-explorer/products/ie/home';\r\n                        }\r\n                        else {\r\n                            window.location = \"index.html\";\r\n                        }\r\n                    }\r\n\r\n                    // check for WebRTC4all extension\r\n                    if (!SIPml.isWebRtc4AllSupported()) {\r\n                        if (confirm(\"webrtc4all extension is not installed. Do you want to install it?\\nIMPORTANT: You must restart your browser after the installation.\")) {\r\n                            window.location = 'http://code.google.com/p/webrtc4all/downloads/list';\r\n                        }\r\n                        else {\r\n                            // Must do nothing: give the user the chance to accept the extension\r\n                            // window.location = \"index.html\";\r\n                        }\r\n                    }\r\n                    // break page loading ('window.location' won't stop JS execution)\r\n                    if (!SIPml.isWebRtc4AllSupported()) {\r\n                        return;\r\n                    }\r\n                }\r\n                else if (SIPml.getNavigatorFriendlyName() == \"safari\" || SIPml.getNavigatorFriendlyName() == \"firefox\" || SIPml.getNavigatorFriendlyName() == \"opera\") {\r\n                    if (confirm(\"Your browser don't support WebRTC.\\nDo you want to install WebRTC4all extension to enjoy audio/video calls?\\nIMPORTANT: You must restart your browser after the installation.\")) {\r\n                        window.location = 'http://code.google.com/p/webrtc4all/downloads/list';\r\n                    }\r\n                    else {\r\n                        window.location = \"index.html\";\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            // OSX, Unix, Android, iOS...\r\n            else {\r\n                if (confirm('WebRTC not supported on your browser.\\nDo you want to download a WebRTC-capable browser?')) {\r\n                    window.location = 'https://www.google.com/intl/en/chrome/browser/';\r\n                }\r\n                else {\r\n                    window.location = \"index.html\";\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        // checks for WebSocket support\r\n        if (!SIPml.isWebSocketSupported() && !SIPml.isWebRtc4AllSupported()) {\r\n            if (confirm('Your browser don\\'t support WebSockets.\\nDo you want to download a WebSocket-capable browser?')) {\r\n                window.location = 'https://www.google.com/intl/en/chrome/browser/';\r\n            }\r\n            else {\r\n                window.location = \"index.html\";\r\n            }\r\n            return;\r\n        }\r\n\r\n        // FIXME: displays must be per session\r\n\r\n        // attachs video displays\r\n        if (SIPml.isWebRtc4AllSupported()) {\r\n            viewVideoLocal = document.getElementById(\"divVideoLocal\");\r\n            viewVideoRemote = document.getElementById(\"divVideoRemote\");\r\n            WebRtc4all_SetDisplays(viewVideoLocal, viewVideoRemote); // FIXME: move to SIPml.* API\r\n        }\r\n        else{\r\n            viewVideoLocal = videoLocal;\r\n            viewVideoRemote = videoRemote;\r\n        }\r\n\r\n        if (!SIPml.isWebRtc4AllSupported() && !SIPml.isWebRtcSupported()) {\r\n            if (confirm('Your browser don\\'t support WebRTC.\\naudio/video calls will be disabled.\\nDo you want to download a WebRTC-capable browser?')) {\r\n                window.location = 'https://www.google.com/intl/en/chrome/browser/';\r\n            }\r\n        }\r\n        \r\n        btnRegister.disabled = false;\r\n        document.body.style.cursor = 'default';\r\n        oConfigCall = {\r\n            audio_remote: audioRemote,\r\n            video_local: viewVideoLocal,\r\n            video_remote: viewVideoRemote,\r\n            bandwidth: { audio:undefined, video:undefined },\r\n            video_size: { minWidth:undefined, minHeight:undefined, maxWidth:undefined, maxHeight:undefined },\r\n            events_listener: { events: '*', listener: onSipEventSession },\r\n            sip_caps: [\r\n                            { name: '+g.oma.sip-im' },\r\n                            { name: '+sip.ice' },\r\n                            { name: 'language', value: '\\\"en,fr\\\"' }\r\n                        ]\r\n        };\r\n    }\r\n\r\n\r\n    function loadCallOptions() {\r\n        if (window.localStorage) {\r\n            var s_value;\r\n            if ((s_value = window.localStorage.getItem('org.doubango.call.phone_number'))) txtPhoneNumber.value = s_value;\r\n            bDisableVideo = (window.localStorage.getItem('org.doubango.expert.disable_video') == \"true\");\r\n\r\n            txtCallStatus.innerHTML = '<i>Video ' + (bDisableVideo ? 'disabled' : 'enabled') + '</i>';\r\n        }\r\n    }\r\n\r\n    function saveCallOptions() {\r\n        if (window.localStorage) {\r\n            window.localStorage.setItem('org.doubango.call.phone_number', txtPhoneNumber.value);\r\n            window.localStorage.setItem('org.doubango.expert.disable_video', bDisableVideo ? \"true\" : \"false\");\r\n        }\r\n    }\r\n\r\n    function loadCredentials() {\r\n        if (window.localStorage) {\r\n            // IE retuns 'null' if not defined\r\n            var s_value;\r\n            if ((s_value = window.localStorage.getItem('org.doubango.identity.display_name'))) txtDisplayName.value = s_value;\r\n            if ((s_value = window.localStorage.getItem('org.doubango.identity.impi'))) txtPrivateIdentity.value = s_value;\r\n            if ((s_value = window.localStorage.getItem('org.doubango.identity.impu'))) txtPublicIdentity.value = s_value;\r\n            if ((s_value = window.localStorage.getItem('org.doubango.identity.password'))) txtPassword.value = s_value;\r\n            if ((s_value = window.localStorage.getItem('org.doubango.identity.realm'))) txtRealm.value = s_value;\r\n        }\r\n        else {\r\n            /*txtDisplayName.value = \"005\";\r\n            txtPrivateIdentity.value = \"005\";\r\n            txtPublicIdentity.value = \"sip:005@192.168.0.28\";\r\n            txtPassword.value = \"005\";\r\n            txtRealm.value = \"192.168.0.28\";\r\n            txtPhoneNumber.value = \"005\";*/\r\n        }\r\n    };\r\n\r\n    function saveCredentials() {\r\n        if (window.localStorage) {\r\n            window.localStorage.setItem('org.doubango.identity.display_name', txtDisplayName.value);\r\n            window.localStorage.setItem('org.doubango.identity.impi', txtPrivateIdentity.value);\r\n            window.localStorage.setItem('org.doubango.identity.impu', txtPublicIdentity.value);\r\n            window.localStorage.setItem('org.doubango.identity.password', txtPassword.value);\r\n            window.localStorage.setItem('org.doubango.identity.realm', txtRealm.value);\r\n        }\r\n    };\r\n\r\n    // sends SIP REGISTER request to login\r\n    function sipRegister() {\r\n        // catch exception for IE (DOM not ready)\r\n        try {\r\n            btnRegister.disabled = true;\r\n            if (!txtRealm.value || !txtPrivateIdentity.value || !txtPublicIdentity.value) {\r\n                txtRegStatus.innerHTML = '<b>Please fill madatory fields (*)</b>';\r\n                btnRegister.disabled = false;\r\n                return;\r\n            }\r\n            var o_impu = tsip_uri.prototype.Parse(txtPublicIdentity.value);\r\n            if (!o_impu || !o_impu.s_user_name || !o_impu.s_host) {\r\n                txtRegStatus.innerHTML = \"<b>[\" + txtPublicIdentity.value + \"] is not a valid Public identity</b>\";\r\n                btnRegister.disabled = false;\r\n                return;\r\n            }\r\n\r\n            // enable notifications if not already done\r\n            if (window.webkitNotifications && window.webkitNotifications.checkPermission() != 0) {\r\n                window.webkitNotifications.requestPermission();\r\n            }\r\n\r\n            // save credentials\r\n            saveCredentials();\r\n\r\n            // update debug level to be sure new values will be used if the user haven't updated the page\r\n            SIPml.setDebugLevel((window.localStorage && window.localStorage.getItem('org.doubango.expert.disable_debug') == \"true\") ? \"error\" : \"info\");\r\n\r\n            // create SIP stack\r\n            oSipStack = new SIPml.Stack({\r\n                    realm: txtRealm.value,\r\n                    impi: txtPrivateIdentity.value,\r\n                    impu: txtPublicIdentity.value,\r\n                    password: txtPassword.value,\r\n                    display_name: txtDisplayName.value,\r\n                    websocket_proxy_url: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.websocket_server_url') : null),\r\n                    outbound_proxy_url: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.sip_outboundproxy_url') : null),\r\n                    ice_servers: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.ice_servers') : null),\r\n                    enable_rtcweb_breaker: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.enable_rtcweb_breaker') == \"true\" : false),\r\n                    events_listener: { events: '*', listener: onSipEventStack },\r\n                    enable_early_ims: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.disable_early_ims') != \"true\" : true), // Must be true unless you're using a real IMS network\r\n                    enable_media_stream_cache: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.enable_media_caching') == \"true\" : false),\r\n                    bandwidth: (window.localStorage ? tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.bandwidth')) : null), // could be redefined a session-level\r\n                    video_size: (window.localStorage ? tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.video_size')) : null), // could be redefined a session-level\r\n                    sip_headers: [\r\n                            { name: 'User-Agent', value: 'IM-client/OMA1.0 sipML5-v1.2014.04.18' },\r\n                            { name: 'Organization', value: 'Doubango Telecom' }\r\n                    ]\r\n                }\r\n            );\r\n            if (oSipStack.start() != 0) {\r\n                txtRegStatus.innerHTML = '<b>Failed to start the SIP stack</b>';\r\n            }\r\n            else return;\r\n        }\r\n        catch (e) {\r\n            txtRegStatus.innerHTML = \"<b>2:\" + e + \"</b>\";\r\n        }\r\n        btnRegister.disabled = false;\r\n    }\r\n\r\n    // sends SIP REGISTER (expires=0) to logout\r\n    function sipUnRegister() {\r\n        if (oSipStack) {\r\n            oSipStack.stop(); // shutdown all sessions\r\n        }\r\n    }\r\n\r\n    // makes a call (SIP INVITE)\r\n    function sipCall(s_type) {\r\n        if (oSipStack && !oSipSessionCall && !tsk_string_is_null_or_empty(txtPhoneNumber.value)) {\r\n            if(s_type == 'call-screenshare') {\r\n                if(!SIPml.isScreenShareSupported()) {\r\n                    alert('Screen sharing not supported. Are you using chrome 26+?');\r\n                    return;\r\n                }\r\n                if (!location.protocol.match('https')){\r\n                    if (confirm(\"Screen sharing requires https://. Do you want to be redirected?\")) {\r\n                        sipUnRegister();\r\n                        window.location = 'https://ns313841.ovh.net/call.htm';\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            btnCall.disabled = true;\r\n            btnHangUp.disabled = false;\r\n\r\n            if(window.localStorage) {\r\n                oConfigCall.bandwidth = tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.bandwidth')); // already defined at stack-level but redifined to use latest values\r\n                oConfigCall.video_size = tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.video_size')); // already defined at stack-level but redifined to use latest values\r\n            }\r\n            \r\n            // create call session\r\n            oSipSessionCall = oSipStack.newSession(s_type, oConfigCall);\r\n            // make call\r\n            if (oSipSessionCall.call(txtPhoneNumber.value) != 0) {\r\n                oSipSessionCall = null;\r\n                txtCallStatus.value = 'Failed to make call';\r\n                btnCall.disabled = false;\r\n                btnHangUp.disabled = true;\r\n                return;\r\n            }\r\n            saveCallOptions();\r\n        }\r\n        else if (oSipSessionCall) {\r\n            txtCallStatus.innerHTML = '<i>Connecting...</i>';\r\n            oSipSessionCall.accept(oConfigCall);\r\n        }\r\n    }\r\n\r\n    // transfers the call\r\n    function sipTransfer() {\r\n        if (oSipSessionCall) {\r\n            var s_destination = prompt('Enter destination number', '');\r\n            if (!tsk_string_is_null_or_empty(s_destination)) {\r\n                btnTransfer.disabled = true;\r\n                if (oSipSessionCall.transfer(s_destination) != 0) {\r\n                    txtCallStatus.innerHTML = '<i>Call transfer failed</i>';\r\n                    btnTransfer.disabled = false;\r\n                    return;\r\n                }\r\n                txtCallStatus.innerHTML = '<i>Transfering the call...</i>';\r\n            }\r\n        }\r\n    }\r\n    \r\n    // holds or resumes the call\r\n    function sipToggleHoldResume() {\r\n        if (oSipSessionCall) {\r\n            var i_ret;\r\n            btnHoldResume.disabled = true;\r\n            txtCallStatus.innerHTML = oSipSessionCall.bHeld ? '<i>Resuming the call...</i>' : '<i>Holding the call...</i>';\r\n            i_ret = oSipSessionCall.bHeld ? oSipSessionCall.resume() : oSipSessionCall.hold();\r\n            if (i_ret != 0) {\r\n                txtCallStatus.innerHTML = '<i>Hold / Resume failed</i>';\r\n                btnHoldResume.disabled = false;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    // terminates the call (SIP BYE or CANCEL)\r\n    function sipHangUp() {\r\n        if (oSipSessionCall) {\r\n            txtCallStatus.innerHTML = '<i>Terminating the call...</i>';\r\n            oSipSessionCall.hangup({events_listener: { events: '*', listener: onSipEventSession }});\r\n        }\r\n    }\r\n\r\n    function sipSendDTMF(c){\r\n        if(oSipSessionCall && c){\r\n            if(oSipSessionCall.dtmf(c) == 0){\r\n                try { dtmfTone.play(); } catch(e){ }\r\n            }\r\n        }\r\n    }\r\n\r\n    function startRingTone() {\r\n        try { ringtone.play(); }\r\n        catch (e) { }\r\n    }\r\n\r\n    function stopRingTone() {\r\n        try { ringtone.pause(); }\r\n        catch (e) { }\r\n    }\r\n\r\n    function startRingbackTone() {\r\n        try { ringbacktone.play(); }\r\n        catch (e) { }\r\n    }\r\n\r\n    function stopRingbackTone() {\r\n        try { ringbacktone.pause(); }\r\n        catch (e) { }\r\n    }\r\n\r\n    function toggleFullScreen() {\r\n        if (videoRemote.webkitSupportsFullscreen) {\r\n            fullScreen(!videoRemote.webkitDisplayingFullscreen);\r\n        }\r\n        else {\r\n            fullScreen(!bFullScreen);\r\n        }\r\n    }\r\n\r\n    function openKeyPad(){\r\n        divKeyPad.style.visibility = 'visible';\r\n        divKeyPad.style.left = ((document.body.clientWidth - C.divKeyPadWidth) >> 1) + 'px';\r\n        divKeyPad.style.top = '70px';\r\n        divGlassPanel.style.visibility = 'visible';\r\n    }\r\n\r\n    function closeKeyPad(){\r\n        divKeyPad.style.left = '0px';\r\n        divKeyPad.style.top = '0px';\r\n        divKeyPad.style.visibility = 'hidden';\r\n        divGlassPanel.style.visibility = 'hidden';\r\n    }\r\n\r\n    function fullScreen(b_fs) {\r\n        bFullScreen = b_fs;\r\n        if (tsk_utils_have_webrtc4native() && bFullScreen && videoRemote.webkitSupportsFullscreen) {\r\n            if (bFullScreen) {\r\n                videoRemote.webkitEnterFullScreen();\r\n            }\r\n            else {\r\n                videoRemote.webkitExitFullscreen();\r\n            }\r\n        }\r\n        else {\r\n            if (tsk_utils_have_webrtc4npapi()) {\r\n                try { if(window.__o_display_remote) window.__o_display_remote.setFullScreen(b_fs); }\r\n                catch (e) { divVideo.setAttribute(\"class\", b_fs ? \"full-screen\" : \"normal-screen\"); }\r\n            }\r\n            else {\r\n                divVideo.setAttribute(\"class\", b_fs ? \"full-screen\" : \"normal-screen\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function showNotifICall(s_number) {\r\n        // permission already asked when we registered\r\n        if (window.webkitNotifications && window.webkitNotifications.checkPermission() == 0) {\r\n            if (oNotifICall) {\r\n                oNotifICall.cancel();\r\n            }\r\n            oNotifICall = window.webkitNotifications.createNotification('images/sipml-34x39.png', 'Incaming call', 'Incoming call from ' + s_number);\r\n            oNotifICall.onclose = function () { oNotifICall = null; };\r\n            oNotifICall.show();\r\n        }\r\n    }\r\n\r\n    function onKeyUp(evt) {\r\n        evt = (evt || window.event);\r\n        if (evt.keyCode == 27) {\r\n            fullScreen(false);\r\n        }\r\n        else if (evt.ctrlKey && evt.shiftKey) { // CTRL + SHIFT\r\n            if (evt.keyCode == 65 || evt.keyCode == 86) { // A (65) or V (86)\r\n                bDisableVideo = (evt.keyCode == 65);\r\n                txtCallStatus.innerHTML = '<i>Video ' + (bDisableVideo ? 'disabled' : 'enabled') + '</i>';\r\n                window.localStorage.setItem('org.doubango.expert.disable_video', bDisableVideo);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onDivCallCtrlMouseMove(evt) {\r\n        try { // IE: DOM not ready\r\n            if (tsk_utils_have_stream()) {\r\n                btnCall.disabled = (!tsk_utils_have_stream() || !oSipSessionRegister || !oSipSessionRegister.is_connected());\r\n                document.getElementById(\"divCallCtrl\").onmousemove = null; // unsubscribe\r\n            }\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n    function uiOnConnectionEvent(b_connected, b_connecting) { // should be enum: connecting, connected, terminating, terminated\r\n        btnRegister.disabled = b_connected || b_connecting;\r\n        btnUnRegister.disabled = !b_connected && !b_connecting;\r\n        btnCall.disabled = !(b_connected && tsk_utils_have_webrtc() && tsk_utils_have_stream());\r\n        btnHangUp.disabled = !oSipSessionCall;\r\n    }\r\n\r\n    function uiVideoDisplayEvent(b_local, b_added) {\r\n        var o_elt_video = b_local ? videoLocal : videoRemote;\r\n\r\n        if (b_added) {\r\n            if (SIPml.isWebRtc4AllSupported()) {\r\n                if (b_local){ if(window.__o_display_local) window.__o_display_local.style.visibility = \"visible\"; }\r\n                else { if(window.__o_display_remote) window.__o_display_remote.style.visibility = \"visible\"; }\r\n                   \r\n            }\r\n            else {\r\n                o_elt_video.style.opacity = 1;\r\n            }\r\n            uiVideoDisplayShowHide(true);\r\n        }\r\n        else {\r\n            if (SIPml.isWebRtc4AllSupported()) {\r\n                if (b_local){ if(window.__o_display_local) window.__o_display_local.style.visibility = \"hidden\"; }\r\n                else { if(window.__o_display_remote) window.__o_display_remote.style.visibility = \"hidden\"; }\r\n            }\r\n            else{\r\n                o_elt_video.style.opacity = 0;\r\n            }\r\n            fullScreen(false);\r\n        }\r\n    }\r\n\r\n    function uiVideoDisplayShowHide(b_show) {\r\n        if (b_show) {\r\n            tdVideo.style.height = '340px';\r\n            divVideo.style.height = navigator.appName == 'Microsoft Internet Explorer' ? '100%' : '340px';\r\n        }\r\n        else {\r\n            tdVideo.style.height = '0px';\r\n            divVideo.style.height = '0px';\r\n        }\r\n        btnFullScreen.disabled = !b_show;\r\n    }\r\n\r\n    function uiDisableCallOptions() {\r\n        if(window.localStorage) {\r\n            window.localStorage.setItem('org.doubango.expert.disable_callbtn_options', 'true');\r\n            uiBtnCallSetText('Call');\r\n            alert('Use expert view to enable the options again (/!\\\\requires re-loading the page)');\r\n        }\r\n    }\r\n\r\n    function uiBtnCallSetText(s_text) {\r\n        switch(s_text) {\r\n            case \"Call\":\r\n                {\r\n                    var bDisableCallBtnOptions = (window.localStorage && window.localStorage.getItem('org.doubango.expert.disable_callbtn_options') == \"true\");\r\n                    btnCall.value = btnCall.innerHTML = bDisableCallBtnOptions ? 'Call' : 'Call <span id=\"spanCaret\" class=\"caret\">';\r\n                    btnCall.setAttribute(\"class\", bDisableCallBtnOptions ? \"btn btn-primary\" : \"btn btn-primary dropdown-toggle\");\r\n                    btnCall.onclick = bDisableCallBtnOptions ? function(){ sipCall(bDisableVideo ? 'call-audio' : 'call-audiovideo'); } : null;\r\n                    ulCallOptions.style.visibility = bDisableCallBtnOptions ? \"hidden\" : \"visible\";\r\n                    if(!bDisableCallBtnOptions && ulCallOptions.parentNode != divBtnCallGroup){\r\n                        divBtnCallGroup.appendChild(ulCallOptions);\r\n                    }\r\n                    else if(bDisableCallBtnOptions && ulCallOptions.parentNode == divBtnCallGroup) {\r\n                        document.body.appendChild(ulCallOptions);\r\n                    }\r\n                    \r\n                    break;\r\n                }\r\n            default:\r\n                {\r\n                    btnCall.value = btnCall.innerHTML = s_text;\r\n                    btnCall.setAttribute(\"class\", \"btn btn-primary\");\r\n                    btnCall.onclick = function(){ sipCall(bDisableVideo ? 'call-audio' : 'call-audiovideo'); };\r\n                    ulCallOptions.style.visibility = \"hidden\";\r\n                    if(ulCallOptions.parentNode == divBtnCallGroup){\r\n                        document.body.appendChild(ulCallOptions);\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n    }\r\n\r\n    function uiCallTerminated(s_description){\r\n        uiBtnCallSetText(\"Call\");\r\n        btnHangUp.value = 'HangUp';\r\n        btnHoldResume.value = 'hold';\r\n        btnCall.disabled = false;\r\n        btnHangUp.disabled = true;\r\n\r\n        oSipSessionCall = null;\r\n\r\n        stopRingbackTone();\r\n        stopRingTone();\r\n\r\n        txtCallStatus.innerHTML = \"<i>\" + s_description + \"</i>\";\r\n        uiVideoDisplayShowHide(false);\r\n        divCallOptions.style.opacity = 0;\r\n\r\n        if (oNotifICall) {\r\n            oNotifICall.cancel();\r\n            oNotifICall = null;\r\n        }\r\n\r\n        uiVideoDisplayEvent(true, false);\r\n        uiVideoDisplayEvent(false, false);\r\n\r\n        setTimeout(function () { if (!oSipSessionCall) txtCallStatus.innerHTML = ''; }, 2500);\r\n    }\r\n\r\n    // Callback function for SIP Stacks\r\n    function onSipEventStack(e /*SIPml.Stack.Event*/) {\r\n        tsk_utils_log_info('==stack event = ' + e.type);\r\n        switch (e.type) {\r\n            case 'started':\r\n                {\r\n                    // catch exception for IE (DOM not ready)\r\n                    try {\r\n                        // LogIn (REGISTER) as soon as the stack finish starting\r\n                        oSipSessionRegister = this.newSession('register', {\r\n                            expires: 200,\r\n                            events_listener: { events: '*', listener: onSipEventSession },\r\n                            sip_caps: [\r\n                                        { name: '+g.oma.sip-im', value: null },\r\n                                        { name: '+audio', value: null },\r\n                                        { name: 'language', value: '\\\"en,fr\\\"' }\r\n                                ]\r\n                        });\r\n                        oSipSessionRegister.register();\r\n                    }\r\n                    catch (e) {\r\n                        txtRegStatus.value = txtRegStatus.innerHTML = \"<b>1:\" + e + \"</b>\";\r\n                        btnRegister.disabled = false;\r\n                    }\r\n                    break;\r\n                }\r\n            case 'stopping': case 'stopped': case 'failed_to_start': case 'failed_to_stop':\r\n                {\r\n                    var bFailure = (e.type == 'failed_to_start') || (e.type == 'failed_to_stop');\r\n                    oSipStack = null;\r\n                    oSipSessionRegister = null;\r\n                    oSipSessionCall = null;\r\n\r\n                    uiOnConnectionEvent(false, false);\r\n\r\n                    stopRingbackTone();\r\n                    stopRingTone();\r\n\r\n                    uiVideoDisplayShowHide(false);\r\n                    divCallOptions.style.opacity = 0;\r\n\r\n                    txtCallStatus.innerHTML = '';\r\n                    txtRegStatus.innerHTML = bFailure ? \"<i>Disconnected: <b>\" + e.description + \"</b></i>\" : \"<i>Disconnected</i>\";\r\n                    break;\r\n                }\r\n\r\n            case 'i_new_call':\r\n                {\r\n                    if (oSipSessionCall) {\r\n                        // do not accept the incoming call if we're already 'in call'\r\n                        e.newSession.hangup(); // comment this line for multi-line support\r\n                    }\r\n                    else {\r\n                        oSipSessionCall = e.newSession;\r\n                        // start listening for events\r\n                        oSipSessionCall.setConfiguration(oConfigCall);\r\n\r\n                        uiBtnCallSetText('Answer');\r\n                        btnHangUp.value = 'Reject';\r\n                        btnCall.disabled = false;\r\n                        btnHangUp.disabled = false;\r\n\r\n                        startRingTone();\r\n\r\n                        var sRemoteNumber = (oSipSessionCall.getRemoteFriendlyName() || 'unknown');\r\n                        txtCallStatus.innerHTML = \"<i>Incoming call from [<b>\" + sRemoteNumber + \"</b>]</i>\";\r\n                        showNotifICall(sRemoteNumber);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case 'm_permission_requested':\r\n                {\r\n                    divGlassPanel.style.visibility = 'visible';\r\n                    break;\r\n                }\r\n            case 'm_permission_accepted':\r\n            case 'm_permission_refused':\r\n                {\r\n                    divGlassPanel.style.visibility = 'hidden';\r\n                    if(e.type == 'm_permission_refused'){\r\n                        uiCallTerminated('Media stream permission denied');\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case 'starting': default: break;\r\n        }\r\n    };\r\n\r\n    // Callback function for SIP sessions (INVITE, REGISTER, MESSAGE...)\r\n    function onSipEventSession(e /* SIPml.Session.Event */) {\r\n        tsk_utils_log_info('==session event = ' + e.type);\r\n\r\n        switch (e.type) {\r\n            case 'connecting': case 'connected':\r\n                {\r\n                    var bConnected = (e.type == 'connected');\r\n                    if (e.session == oSipSessionRegister) {\r\n                        uiOnConnectionEvent(bConnected, !bConnected);\r\n                        txtRegStatus.innerHTML = \"<i>\" + e.description + \"</i>\";\r\n                    }\r\n                    else if (e.session == oSipSessionCall) {\r\n                        btnHangUp.value = 'HangUp';\r\n                        btnCall.disabled = true;\r\n                        btnHangUp.disabled = false;\r\n                        btnTransfer.disabled = false;\r\n\r\n                        if (bConnected) {\r\n                            stopRingbackTone();\r\n                            stopRingTone();\r\n\r\n                            if (oNotifICall) {\r\n                                oNotifICall.cancel();\r\n                                oNotifICall = null;\r\n                            }\r\n                        }\r\n\r\n                        txtCallStatus.innerHTML = \"<i>\" + e.description + \"</i>\";\r\n                        divCallOptions.style.opacity = bConnected ? 1 : 0;\r\n\r\n                        if (SIPml.isWebRtc4AllSupported()) { // IE don't provide stream callback\r\n                            uiVideoDisplayEvent(true, true);\r\n                            uiVideoDisplayEvent(false, true);\r\n                        }\r\n                    }\r\n                    break;\r\n                } // 'connecting' | 'connected'\r\n            case 'terminating': case 'terminated':\r\n                {\r\n                    if (e.session == oSipSessionRegister) {\r\n                        uiOnConnectionEvent(false, false);\r\n\r\n                        oSipSessionCall = null;\r\n                        oSipSessionRegister = null;\r\n\r\n                        txtRegStatus.innerHTML = \"<i>\" + e.description + \"</i>\";\r\n                    }\r\n                    else if (e.session == oSipSessionCall) {\r\n                        uiCallTerminated(e.description);\r\n                    }\r\n                    break;\r\n                } // 'terminating' | 'terminated'\r\n\r\n            case 'm_stream_video_local_added':\r\n                {\r\n                    if (e.session == oSipSessionCall) {\r\n                        uiVideoDisplayEvent(true, true);\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_stream_video_local_removed':\r\n                {\r\n                    if (e.session == oSipSessionCall) {\r\n                        uiVideoDisplayEvent(true, false);\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_stream_video_remote_added':\r\n                {\r\n                    if (e.session == oSipSessionCall) {\r\n                        uiVideoDisplayEvent(false, true);\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_stream_video_remote_removed':\r\n                {\r\n                    if (e.session == oSipSessionCall) {\r\n                        uiVideoDisplayEvent(false, false);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case 'm_stream_audio_local_added':\r\n            case 'm_stream_audio_local_removed':\r\n            case 'm_stream_audio_remote_added':\r\n            case 'm_stream_audio_remote_removed':\r\n                {\r\n                    break;\r\n                }\r\n\r\n            case 'i_ect_new_call':\r\n                {\r\n                    oSipSessionTransferCall = e.session;\r\n                    break;\r\n                }\r\n\r\n            case 'i_ao_request':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        var iSipResponseCode = e.getSipResponseCode();\r\n                        if (iSipResponseCode == 180 || iSipResponseCode == 183) {\r\n                            startRingbackTone();\r\n                            txtCallStatus.innerHTML = '<i>Remote ringing...</i>';\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case 'm_early_media':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        stopRingbackTone();\r\n                        stopRingTone();\r\n                        txtCallStatus.innerHTML = '<i>Early media started</i>';\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case 'm_local_hold_ok':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        if (oSipSessionCall.bTransfering) {\r\n                            oSipSessionCall.bTransfering = false;\r\n                            // this.AVSession.TransferCall(this.transferUri);\r\n                        }\r\n                        btnHoldResume.value = 'Resume';\r\n                        btnHoldResume.disabled = false;\r\n                        txtCallStatus.innerHTML = '<i>Call placed on hold</i>';\r\n                        oSipSessionCall.bHeld = true;\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_local_hold_nok':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        oSipSessionCall.bTransfering = false;\r\n                        btnHoldResume.value = 'Hold';\r\n                        btnHoldResume.disabled = false;\r\n                        txtCallStatus.innerHTML = '<i>Failed to place remote party on hold</i>';\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_local_resume_ok':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        oSipSessionCall.bTransfering = false;\r\n                        btnHoldResume.value = 'Hold';\r\n                        btnHoldResume.disabled = false;\r\n                        txtCallStatus.innerHTML = '<i>Call taken off hold</i>';\r\n                        oSipSessionCall.bHeld = false;\r\n\r\n                        if (SIPml.isWebRtc4AllSupported()) { // IE don't provide stream callback yet\r\n                            uiVideoDisplayEvent(true, true);\r\n                            uiVideoDisplayEvent(false, true);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_local_resume_nok':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        oSipSessionCall.bTransfering = false;\r\n                        btnHoldResume.disabled = false;\r\n                        txtCallStatus.innerHTML = '<i>Failed to unhold call</i>';\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_remote_hold':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = '<i>Placed on hold by remote party</i>';\r\n                    }\r\n                    break;\r\n                }\r\n            case 'm_remote_resume':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = '<i>Taken off hold by remote party</i>';\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case 'o_ect_trying':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = '<i>Call transfer in progress...</i>';\r\n                    }\r\n                    break;\r\n                }\r\n            case 'o_ect_accepted':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = '<i>Call transfer accepted</i>';\r\n                    }\r\n                    break;\r\n                }\r\n            case 'o_ect_completed':\r\n            case 'i_ect_completed':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = '<i>Call transfer completed</i>';\r\n                        btnTransfer.disabled = false;\r\n                        if (oSipSessionTransferCall) {\r\n                            oSipSessionCall = oSipSessionTransferCall;\r\n                        }\r\n                        oSipSessionTransferCall = null;\r\n                    }\r\n                    break;\r\n                }\r\n            case 'o_ect_failed':\r\n            case 'i_ect_failed':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = '<i>Call transfer failed</i>';\r\n                        btnTransfer.disabled = false;\r\n                    }\r\n                    break;\r\n                }\r\n            case 'o_ect_notify':\r\n            case 'i_ect_notify':\r\n                {\r\n                    if(e.session == oSipSessionCall){\r\n                        txtCallStatus.innerHTML = \"<i>Call Transfer: <b>\" + e.getSipResponseCode() + \" \" + e.description + \"</b></i>\";\r\n                        if (e.getSipResponseCode() >= 300) {\r\n                            if (oSipSessionCall.bHeld) {\r\n                                oSipSessionCall.resume();\r\n                            }\r\n                            btnTransfer.disabled = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            case 'i_ect_requested':\r\n                {\r\n                    if(e.session == oSipSessionCall){                        \r\n                        var s_message = \"Do you accept call transfer to [\" + e.getTransferDestinationFriendlyName() + \"]?\";//FIXME\r\n                        if (confirm(s_message)) {\r\n                            txtCallStatus.innerHTML = \"<i>Call transfer in progress...</i>\";\r\n                            oSipSessionCall.acceptTransfer();\r\n                            break;\r\n                        }\r\n                        oSipSessionCall.rejectTransfer();\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n    }\r\n\r\n</script>\r\n<body style=\"cursor:wait\">\r\n    <div class=\"navbar navbar-fixed-top\">\r\n        <div id=\"divNavbarInner\" class=\"navbar-inner\">\r\n            <div class=\"container\">\r\n                <a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\"><span\r\n                    class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span>\r\n                </a>\r\n                <img alt=\"sipML5\" class=\"brand\" src=\"./images/sipml-34x39.png\" />\r\n                <div class=\"nav-collapse\">\r\n                    <ul class=\"nav\">\r\n                        <li class=\"active\"><a href=\"index.html?svn=224\">Home</a></li>\r\n                    </ul>\r\n                </div>\r\n                <!--/.nav-collapse -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <div class=\"row-fluid\">\r\n            <div class=\"span4 well\">\r\n                <label style=\"width: 100%;\" align=\"center\" id=\"txtRegStatus\">\r\n                </label>\r\n                <h2>\r\n                    Registration</h2>\r\n                <br />\r\n                <table style='width: 100%'>\r\n                    <tr>\r\n                        <td>\r\n                            <label style=\"height: 100%\">\r\n                                Display Name:</label>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtDisplayName\" value=\"\"\r\n                                placeholder=\"e.g. John Doe\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <label style=\"height: 100%\">\r\n                                Private Identity<sup>*</sup>:</label>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtPrivateIdentity\" value=\"\"\r\n                                placeholder=\"e.g. +33600000000\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <label style=\"height: 100%\">\r\n                                Public Identity<sup>*</sup>:</label>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtPublicIdentity\" value=\"\"\r\n                                placeholder=\"e.g. sip:+33600000000@doubango.org\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <label style=\"height: 100%\">Password:</label>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"password\" style=\"width: 100%; height: 100%\" id=\"txtPassword\" value=\"\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <label style=\"height: 100%\">Realm<sup>*</sup>:</label>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtRealm\" value=\"\" placeholder=\"e.g. doubango.org\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"2\" align=\"right\">\r\n                            <input type=\"button\" class=\"btn btn-success\" id=\"btnRegister\" value=\"LogIn\" disabled onclick='sipRegister();' />\r\n                            &nbsp;\r\n                            <input type=\"button\" class=\"btn btn-danger\" id=\"btnUnRegister\" value=\"LogOut\" disabled onclick='sipUnRegister();' />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"3\">\r\n                            <p class=\"small\"><sup>*</sup> <i>Mandatory Field</i></p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"3\">\r\n                            <a class=\"btn\" href=\"http://code.google.com/p/sipml5/wiki/Public_SIP_Servers\" target=\"_blank\">Need SIP account?</a>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"3\">\r\n                            <a class=\"btn\" href=\"./expert.htm\" target=\"_blank\">Expert mode?</a>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <div id=\"divCallCtrl\" class=\"span7 well\" style='display:table-cell; vertical-align:middle'>\r\n                <label style=\"width: 100%;\" align=\"center\" id=\"txtCallStatus\">\r\n                </label>\r\n                <h2>\r\n                    Call control\r\n                </h2>\r\n                <br />\r\n                <table style='width: 100%;'>\r\n                    <tr>\r\n                        <td style=\"white-space:nowrap;\">\r\n                            <input type=\"text\" style=\"width: 100%; height:100%\" id=\"txtPhoneNumber\" value=\"\" placeholder=\"Enter phone number to call\" />                            \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"1\" align=\"right\">\r\n                            <div class=\"btn-toolbar\" style=\"margin: 0; vertical-align:middle\">\r\n                                <div id=\"divBtnCallGroup\" class=\"btn-group\">\r\n                                    <button id=\"btnCall\" disabled class=\"btn btn-primary\" data-toggle=\"dropdown\">Call</button>\r\n                                </div>&nbsp;&nbsp;\r\n                                <div class=\"btn-group\">\r\n                                    <input type=\"button\" id=\"btnHangUp\" style=\"margin: 0; vertical-align:middle; height: 100%;\" class=\"btn btn-primary\" value=\"HangUp\" onclick='sipHangUp();' disabled />\r\n                                </div>\r\n                             </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td id=\"tdVideo\" class='tab-video'>\r\n                            <div id=\"divVideo\" class='div-video'>\r\n                                <div id=\"divVideoRemote\" style='border:1px solid #000; height:100%; width:100%'>\r\n                                    <video class=\"video\" width=\"100%\" height=\"100%\" id=\"video_remote\" autoplay=\"autoplay\" style=\"opacity: 0; \r\n                                        background-color: #000000; -webkit-transition-property: opacity; -webkit-transition-duration: 2s;\">\r\n                                    </video>\r\n                                </div>\r\n                                <div id=\"divVideoLocal\" style='border:0px solid #000'>\r\n                                    <video class=\"video\" width=\"88px\" height=\"72px\" id=\"video_local\" autoplay=\"autoplay\" muted=\"true\" style=\"opacity: 0;\r\n                                        margin-top: -80px; margin-left: 5px; background-color: #000000; -webkit-transition-property: opacity;\r\n                                        -webkit-transition-duration: 2s;\">\r\n                                    </video>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                       <td align='center'>\r\n                            <div id='divCallOptions' class='call-options' style='opacity: 0; margin-top: 3px'>\r\n                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnFullScreen\" value=\"FullScreen\" disabled onclick='toggleFullScreen();' /> &nbsp;\r\n                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnHoldResume\" value=\"Hold\" onclick='sipToggleHoldResume();' /> &nbsp;\r\n                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnTransfer\" value=\"Transfer\" onclick='sipTransfer();' /> &nbsp;\r\n                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnKeyPad\" value=\"KeyPad\" onclick='openKeyPad();' />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        \r\n        <br />\r\n        <footer>\r\n            <p>&copy; Doubango Telecom 2012-2013 <br />\r\n            <i>Inspiring the future</i>\r\n            </p>\r\n            <!-- Creates all ATL/COM objects right now \r\n                Will open confirmation dialogs if not already done\r\n            -->\r\n            <object id=\"fakeVideoDisplay\" classid=\"clsid:5C2C407B-09D9-449B-BB83-C39B7802A684\" style=\"visibility:hidden;\"> </object>\r\n            <object id=\"fakeLooper\" classid=\"clsid:7082C446-54A8-4280-A18D-54143846211A\" style=\"visibility:visible; width:0px; height:0px\"> </object>\r\n            <object id=\"fakeSessionDescription\" classid=\"clsid:DBA9F8E2-F9FB-47CF-8797-986A69A1CA9C\" style=\"visibility:hidden;\"> </object>\r\n            <object id=\"fakeNetTransport\" classid=\"clsid:5A7D84EC-382C-4844-AB3A-9825DBE30DAE\" style=\"visibility:hidden;\"> </object>\r\n            <object id=\"fakePeerConnection\" classid=\"clsid:56D10AD3-8F52-4AA4-854B-41F4D6F9CEA3\" style=\"visibility:hidden;\"> </object>\r\n            <!-- \r\n                NPAPI  browsers: Safari, Opera and Firefox\r\n            -->\r\n            <!--embed id=\"WebRtc4npapi\" type=\"application/w4a\" width='1' height='1' style='visibility:hidden;' /-->\r\n        </footer>\r\n    </div>\r\n    <!-- /container -->\r\n\r\n    <!-- Glass Panel -->\r\n    <div id='divGlassPanel' class='glass-panel' style='visibility:hidden'></div>\r\n    <!-- KeyPad Div -->\r\n    <div id='divKeyPad' class='span2 well div-keypad' style=\"left:0px; top:0px; width:250; height:240; visibility:hidden\">\r\n        <table style=\"width: 100%; height: 100%\">\r\n            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"1\" onclick=\"sipSendDTMF('1');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"2\" onclick=\"sipSendDTMF('2');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"3\" onclick=\"sipSendDTMF('3');\"/></td></tr>\r\n            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"4\" onclick=\"sipSendDTMF('4');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"5\" onclick=\"sipSendDTMF('5');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"6\" onclick=\"sipSendDTMF('6');\"/></td></tr>\r\n            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"7\" onclick=\"sipSendDTMF('7');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"8\" onclick=\"sipSendDTMF('8');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"9\" onclick=\"sipSendDTMF('9');\"/></td></tr>\r\n            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"*\" onclick=\"sipSendDTMF('*');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"0\" onclick=\"sipSendDTMF('0');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"#\" onclick=\"sipSendDTMF('#');\"/></td></tr>\r\n            <tr><td colspan=3><input type=\"button\" style=\"width: 100%\" class=\"btn btn-medium btn-danger\" value=\"close\" onclick=\"closeKeyPad();\" /></td></tr>\r\n        </table>\r\n    </div>\r\n    <!-- Call button options -->\r\n    <ul id=\"ulCallOptions\" class=\"dropdown-menu\" style=\"visibility:hidden\">\r\n        <li><a href=\"#\" onclick='sipCall(\"call-audio\");'>Audio</a></li>\r\n        <li><a href=\"#\" onclick='sipCall(\"call-audiovideo\");'>Video</a></li>\r\n        <li id='liScreenShare' ><a href=\"#\" onclick='sipCall(\"call-screenshare\");'>Screen Share</a></li>\r\n        <li class=\"divider\"></li>\r\n        <li><a href=\"#\" onclick='uiDisableCallOptions();'><b>Disable these options</b></a></li>\r\n    </ul>\r\n\r\n    <!-- Le javascript\r\n    ================================================== -->\r\n    <!-- Placed at the end of the document so the pages load faster -->\r\n    <script type=\"text/javascript\" src=\"./assets/js/jquery.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-transition.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-alert.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-modal.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-dropdown.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-scrollspy.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-tab.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-tooltip.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-popover.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-button.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-collapse.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-carousel.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-typeahead.js\"></script>\r\n\r\n    <!-- Audios -->\r\n    <audio id=\"audio_remote\" autoplay=\"autoplay\" />\r\n    <audio id=\"ringtone\" loop src=\"sounds/ringtone.wav\" />\r\n    <audio id=\"ringbacktone\" loop src=\"sounds/ringbacktone.wav\" />\r\n    <audio id=\"dtmfTone\" src=\"sounds/dtmf.wav\" />\r\n\r\n    <!-- \r\n        Microsoft Internet Explorer extension\r\n        For now we use msi installer as we don't have trusted certificate yet :(\r\n    -->\r\n    <!--object id=\"webrtc4ieLooper\" classid=\"clsid:7082C446-54A8-4280-A18D-54143846211A\" CODEBASE=\"http://sipml5.org/deploy/webrtc4all.CAB\"> </object-->\r\n\r\n    <!-- GOOGLE ANALYTICS -->\r\n    <script type=\"text/javascript\">\r\n        var gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\r\n        document.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\r\n    </script>\r\n\r\n    <script type=\"text/javascript\">\r\n        try {\r\n            var pageTracker = _gat._getTracker(\"UA-6868621-19\");\r\n            pageTracker._trackPageview();\r\n        } catch (err) { }\r\n    </script>\r\n\r\n</body>\r\n</html>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}